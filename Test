package com.sgcib.digitrade.reporting.infrastructure.client.tradefinancecompliance;

import com.sgcib.digitrade.reporting.infrastructure.client.tradefinancecompliance.dto.EscalationType;
import com.sgcib.digitrade.reporting.infrastructure.client.tradefinancecompliance.dto.EscalationTypes;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;
import org.springframework.http.ResponseEntity;

import java.util.Arrays;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class TradefinanceComplianceClientCacheServiceTest {

    private TradeFinanceComplianceClient tradeFinanceComplianceClient;
    private TradefinanceComplianceClientCacheService tradefinanceComplianceClientCacheService;

    @BeforeEach
    public void setUp() {
        tradeFinanceComplianceClient = mock(TradeFinanceComplianceClient.class);
        tradefinanceComplianceClientCacheService = new TradefinanceComplianceClientCacheService(tradeFinanceComplianceClient);
    }

    @Test
    public void should_return_list_of_all_the_selected_escalation_types() {
        // Given
        List<String> selectedEscalationTypeCodes = Arrays.asList("CODE1", "CODE3");

        EscalationType type1 = new EscalationType("CODE1", "Type 1");
        EscalationType type2 = new EscalationType("CODE2", "Type 2");
        EscalationType type3 = new EscalationType("CODE3", "Type 3");

        EscalationTypes escalationTypes = new EscalationTypes(Arrays.asList(type1, type2, type3));
        when(tradeFinanceComplianceClient.getEscalationTypes()).thenReturn(ResponseEntity.ok(escalationTypes));

        // When
        List<String> result = tradefinanceComplianceClientCacheService.getEscalationTypesFromComplianceSummary(selectedEscalationTypeCodes);

        // Then
        assertEquals(2, result.size());
        assertEquals(Arrays.asList("Type 1", "Type 3"), result);
    }
}
@Test
public void should_return_empty_list_when_escalation_types_are_null() throws IOException {
    // Given
    ComplianceResponseInfo expected = ComplianceResponseInfo.builder()
            .status("APPROVED")
            .attachment(ComplianceResponseAttachment.builder()
                    .id(1L)
                    .name("filename.pdf")
                    .build())
            .comment("comment")
            .escalationNecessary(true)
            .escalationTypes(null)  // Simulating null escalation types
            .build();

    String jsonFilePath = "src/test/resources/compliancesummary/escalation-types.json";
    ObjectMapper objectMapper = new ObjectMapper();
    EscalationTypes escalationTypes = objectMapper.readValue(new File(jsonFilePath), EscalationTypes.class);

    ResponseEntity<EscalationTypes> responseEntity = ResponseEntity.ok(escalationTypes);
    when(tradeFinanceComplianceClient.getEscalationTypes()).thenReturn(responseEntity);

    // When
    List<String> result = complianceSummaryTemplateHelperService.getEscalationTypesFromComplianceSummary(expected.getEscalationTypes());

    // Then
    assertThat(result).isEmpty();
}
