import { TestBed } from '@angular/core/testing';
import { Router } from '@angular/router';
import { UserService } from '../Services/user.service';
import { NavbarComponent } from './navbar.component';

describe('NavbarComponent', () => {
  let component: NavbarComponent;
  let fixture: ComponentFixture<NavbarComponent>;
  let mockRouter: Router;
  let mockUserService: UserService;

  beforeEach(async () => {
    mockRouter = { navigate: jest.fn() };
    mockUserService = {};

    await TestBed.configureTestingModule({
      declarations: [NavbarComponent],
      providers: [
        { provide: Router, useValue: mockRouter },
        { provide: UserService, useValue: mockUserService },
      ],
    }).compileComponents();

    fixture = TestBed.createComponent(NavbarComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });

  it('should navigate to user on logout', () => {
    component.Logout();
    expect(mockRouter.navigate).toHaveBeenCalledWith(['/user']);
  });

  it('should navigate to route', () => {
    const route = '/test';
    component.navigateTo(route);
    expect(mockRouter.navigate).toHaveBeenCalledWith([route]);
  });
});


public List<String> getEscalationTypesFromComplianceSummary() {
    // Fetch the list of escalation type names from the client service
    ResponseEntity<List<String>> responseEntity = this.tradeFinanceComplianceClient.getEscalationTypes();

    if (responseEntity != null) {
        // Ensure the body is not null and return it
        List<String> escalationTypeNames = responseEntity.getBody();

        if (escalationTypeNames != null) {
            return escalationTypeNames; // Return the list of names
        } else {
            return Collections.emptyList(); // Return an empty list if body is null
        }
    } else {
        return Collections.emptyList(); // Return an empty list if responseEntity is null
    }
}


public List<String> getEscalationTypesFromComplianceSummary() {
    // Fetch escalation types from the compliance client
    ResponseEntity<EscalationTypes> responseEntity = this.tradeFinanceComplianceClient.getEscalationTypes();

    if (responseEntity != null) {
        // Ensure the body is not null and extract escalation types
        List<EscalationType> escalationTypes = Objects.requireNonNull(responseEntity.getBody()).getEscalationTypes();

        if (escalationTypes != null) {
            // Stream escalation types to extract names directly
            return escalationTypes.stream()
                .map(EscalationType::getName) // Extract names
                .collect(Collectors.toList());
        } else {
            // Return an empty list if escalationTypes is null
            return Collections.emptyList();
        }
    } else {
        // Return an empty list if the responseEntity is null
        return Collections.emptyList();
    }
}


I need clarity on a few points, Sushma. First, my probation is supposed to end in December, but you mentioned that I will be relieved from Digitrade in January. Second, I received a call from the 'CIO Ref' team regarding a requirement. They mentioned that I can only switch teams after completing 18 months of experience in SG. They also suggested I connect with my seniors regarding this."
